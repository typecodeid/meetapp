basePath: /
definitions:
  handlers.Reservation:
    properties:
      company:
        type: string
      created_at:
        type: string
      end_time:
        type: string
      final_price:
        type: integer
      id:
        type: string
      name:
        type: string
      participants:
        type: integer
      phone:
        type: string
      room:
        $ref: '#/definitions/handlers.Room'
      room_price:
        type: integer
      snack:
        $ref: '#/definitions/handlers.Snack'
      start_time:
        type: string
      status:
        type: string
      total_snack:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/handlers.User'
    type: object
  handlers.Room:
    properties:
      capacity:
        type: integer
      id:
        type: string
      name:
        type: string
      price:
        type: integer
      type:
        type: string
    type: object
  handlers.Snack:
    properties:
      category:
        type: string
      id:
        type: string
      name:
        type: string
      package:
        type: string
      price:
        type: string
    type: object
  handlers.User:
    properties:
      email:
        type: string
      id:
        type: string
      image_id:
        type: string
      language:
        type: string
      password:
        type: string
      role:
        type: string
      status:
        type: boolean
      username:
        type: string
    type: object
host: localhost:7000
info:
  contact: {}
  description: This is documentation API from Swagger
  termsOfService: http://swagger.io/terms/
  title: Swagger MeetApp By Sinau Koding API
  version: "1.0"
paths:
  /reservations:
    get:
      consumes:
      - application/json
      description: Retrieve all reservations in the system
      parameters:
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by room type
        in: query
        name: room_type
        type: string
      - description: Filter by start date (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: Filter by end date (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Reservation'
            type: array
      summary: Get all reservations
      tags:
      - reservations
    post:
      consumes:
      - application/json
      description: Create a new reservation
      parameters:
      - description: Reservation details
        in: body
        name: reservation
        required: true
        schema:
          $ref: '#/definitions/handlers.Reservation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new reservation
      tags:
      - reservations
  /reservations/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a reservation by its ID
      parameters:
      - description: Reservation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Reservation'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a reservation by ID
      tags:
      - reservations
    put:
      consumes:
      - application/json
      description: Edit a reservation
      parameters:
      - description: Reservation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Edit a reservation
      tags:
      - reservations
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Create a new user
      tags:
      - users
swagger: "2.0"
